; -*- mode: clojure; -*-
; vim: filetype=clojure

(require '[clojure.string :as string])
(require '[org.spootnik.riemann.thresholds :refer [threshold-check]])

(logging/init)

(def graph (graphite {:host "collectdriemann_graphite_1" :port 2003}))

(let [host "0.0.0.0"]
  (tcp-server :host host)
  (udp-server :host host)
  (ws-server  :host host))

(periodically-expire 5)

(def unique-hosts
  (fn [events]
    (let [cnt (count (distinct (map #(:host %) events)))]
      (event
        {:host "common"
         :service "unique hosts"
         :time (unix-time)
         :metric cnt}))))

(let [index (index)]
  (streams
    (fixed-time-window 30 (combine unique-hosts index graph))
    index
    graph
    (expired #(info "expired" %))))
