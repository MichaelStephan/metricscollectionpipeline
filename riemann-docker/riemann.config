; -*- mode: clojure; -*-
; vim: filetype=clojure

(require '[clojure.string :as string])
(require '[org.spootnik.riemann.thresholds :refer [threshold-check]])

(logging/init)

(def graph (graphite {:host "localhost" :port 2023}))

(let [host "0.0.0.0"]
  (tcp-server :host host)
  (udp-server :host host)
  (ws-server  :host host))

(periodically-expire 5)

(def unique-hosts
  (fn [events]
    (event
      {:host "common"
       :service "hosts"
       :time (unix-time)
       :metric (count (distinct (map #(:host %) events)))})))

(let [index (default :ttl 30 (index))]
  (streams
    (where (not (expired? event))
           index
           graph)))

; (fixed-time-window 30 (combine unique-hosts graph))
